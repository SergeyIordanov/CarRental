@using CarRental.WEB.ViewModels

@model IEnumerable<OrderViewModel>

<div id="loading" class="loading-el">
    <br />
    <p class="flow-text welcome-text centralized">Loading...</p>
</div>

@if (!Model.Any())
{
    <p class="flow-text centralized welcome-text">There are no current orders</p>
}
else
{
    foreach (var order in Model.Reverse())
    {
        if (order.OrderStatus == OrderViewModel.Status.Returned)
        {
            continue;
        }
        <div class="row">
            <div class="col s10 push-s1">
                <div class="card">
                    <div class="card-content">
                        <div class="row no-margin-bot">
                            <div class="col s10 push-s1">
                                <p class="flow-text welcome-text centralized">@order.Car.Brand @order.Car.ModelName</p>
                                <p class="flow-text sub-welcome-text centralized">@order.FromDate.ToShortDateString() - @order.ToDate.ToShortDateString()</p>
                            </div>
                        </div>
                        <hr class="colored-hr-thin" />
                        <div class="row">
                            <div class="col s10 push-s1">
                                <p class="flow-text sub-welcome-text centralized">Client info</p>
                                <p class="flow-text sub-welcome-text"><span class="flow-text sub-welcome-text black-text">First name</span>: @order.FirstName</p>
                                <p class="flow-text sub-welcome-text"><span class="flow-text sub-welcome-text black-text">Last name</span>: @order.LastName</p>
                                <p class="flow-text sub-welcome-text"><span class="flow-text sub-welcome-text black-text">Tel</span>: @order.PhoneNumber</p>
                                <p class="flow-text sub-welcome-text"><span class="flow-text sub-welcome-text black-text">E-mail</span>: @User.Identity.Name</p>
                            </div>
                            <div class="col s10 push-s1">
                                <p class="flow-text sub-welcome-text centralized">Order info</p>
                                <p class="flow-text sub-welcome-text black-text">
                                    Status
                                    @if (order.OrderStatus == OrderViewModel.Status.Accepted)
                                    {
                                        <span class="flow-text sub-welcome-text yellow-text">: Accepted</span>
                                    }
                                    else if (order.OrderStatus == OrderViewModel.Status.Paid)
                                    {
                                        <span class="flow-text sub-welcome-text green-text">: Paid</span>
                                    }
                                    else if (order.OrderStatus == OrderViewModel.Status.ReturnedWithDamage)
                                    {
                                        <span class="flow-text sub-welcome-text red-text">: Returned with damage</span>
                                    }
                                </p>
                                <p class="flow-text sub-welcome-text"><span class="flow-text sub-welcome-text black-text">Pick-up address</span>: @order.PickUpAddress</p>
                                @if (order.WithDriver)
                                {
                                    <p class="flow-text sub-welcome-text">
                                        <span class="flow-text sub-welcome-text black-text">Driver</span>: Yes
                                    </p>
                                }
                                else
                                {
                                    <p class="flow-text sub-welcome-text">
                                        <span class="flow-text sub-welcome-text black-text">Driver</span>: No
                                    </p>
                                }
                                <p class="flow-text sub-welcome-text"><span class="flow-text sub-welcome-text black-text">Price</span>: $@order.TotalPrice</p>
                            </div>
                        </div>
                        @if (order.OrderStatus == OrderViewModel.Status.Accepted)
                        {
                            <div class="row no-margin-bot">
                                <div class="col s12">
                                    <div class="row">
                                        @using (Ajax.BeginForm("DeclineAccepted", "OrderManage", new AjaxOptions
                                        {
                                            HttpMethod = "post",
                                            UpdateTargetId = "currentorders_target",
                                            LoadingElementId = "loading"
                                        }))
                                        {
                                            <div class="col s10 push-s1 centralized">

                                                <input id="Id" name="Id" type="hidden" value="@order.Id">
                                                <input type="submit" value="Decline" class="btn btn-default red" />

                                            </div>
                                            <div class="input-field col s10 push-s1">
                                                <label for="decline_issue">Decline issue:</label>
                                                <textarea class="materialize-textarea" cols="20" id="decline_issue" name="DeclineIssue" rows="1"></textarea>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        else if (order.OrderStatus == OrderViewModel.Status.Paid)
                        {
                            <div class="row no-margin-bot">
                                <div class="col s12">
                                    <div class="row">
                                        @using (Ajax.BeginForm("Return", "OrderManage", new AjaxOptions
                                        {
                                            HttpMethod = "post",
                                            UpdateTargetId = "currentorders_target",
                                            LoadingElementId = "loading",
                                            LoadingElementDuration = 400
                                        }))
                                        {
                                            <div class="col s10 push-s1">

                                                <input id="Id" name="Id" type="hidden" value="@order.Id">
                                                <input type="submit" value="Returned" class="btn btn-default yellow black-text"/>

                                            </div>
                                        }
                                    </div>
                                    <div class="row">
                                        @using (Ajax.BeginForm("ReturnToRepair", "OrderManage", new AjaxOptions
                                        {
                                            HttpMethod = "post",
                                            UpdateTargetId = "currentorders_target",
                                            LoadingElementId = "loading",
                                            LoadingElementDuration = 400
                                        }))
                                        {
                                            <div class="input-field col s6 push-s1">

                                                <input id="Id" name="Id" type="hidden" value="@order.Id">
                                                <input type="submit" value="Returned with damage" class="btn btn-default red"/>
                                            </div>
                                            <div class="input-field col s3 push-s2 no-margin-top">
                                                <label for="repair_price">Price of repairing</label>
                                                <input type="number" min="0" max="1000000" name="RepairPrice" id="repair_price" required/>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        else if (order.OrderStatus == OrderViewModel.Status.ReturnedWithDamage)
                        {
                            <div class="row no-margin-bot">
                                <div class="col s12">
                                    <p class="flow-text sub-welcome-text centralized">Waiting for customer's payment for repairing..</p>
                                    <p class="flow-text sub-welcome-text centralized">Repair price is $@order.RepairPrice</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}
